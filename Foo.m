//
//  Foo1.m
//
//  Created on Mar 28, 2021.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "Foo1.h"



@implementation Foo1


#pragma mark - Canvas Drawings

//! Page 2

+ (void)drawPage2 {
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    const CGFloat kNoseWidthAsPercentageOfHeight = 0.52;
    CGFloat width = 105, height = 36;
    CGFloat noseWidth = height * kNoseWidthAsPercentageOfHeight;
    
    [[UIBezierPath bezierPathWithRoundedRect:rect cornerRadius:kCornerRadius] addClip];
    CGContextClearRect(CGRectMake(0, 0, noseWidth, height));
    
    UIBezierPath *rectangle = [UIBezierPath bezierPath];
    // Start at top left, go down to bottom right, to to nose, go back to top left
    [rectangle moveToPoint:CGPointMake(noseWidth, 0)];
    // Bottom left
    [rectangle addLineToPoint:CGPointMake(noseWidth, height)];
    [rectangle addCurveToPoint:CGPointMake(14.85, 34.51) controlPoint1:CGPointMake(17.35, height) controlPoint2:CGPointMake(15.94, 35.47)];
    // Nose
    [rectangle addCurveToPoint:CGPointMake(0, height / 2) controlPoint1:CGPointMake(4.95, 25.8) controlPoint2:CGPointMake(0, 20.3)];
    // Top left again
    [rectangle addCurveToPoint:CGPointMake(14.85, 1.49) controlPoint1:CGPointMake(0, 15.7) controlPoint2:CGPointMake(4.95, 10.2)];
    [rectangle addCurveToPoint:CGPointMake(noseWidth, 0) controlPoint1:CGPointMake(15.94, 0.53) controlPoint2:CGPointMake(17.35, 0)];
    
    [rectangle closePath];
    CGContextSaveGState(context);
    CGContextSetAlpha(context, 0.28);
    CGContextBeginTransparencyLayer(context, nil);
    {
        CGContextTranslateCTM(context, -450, -436);
        rectangle.usesEvenOddFillRule = YES;
        [[UIColor colorWithHue:1 saturation:0.992 brightness:0.614 alpha:1] setFill];
        [rectangle fill];
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);
    
    CGFloat rightStart = width - 7.7;
    CGFloat rightMid = width - 3;
    CGFloat rightEnd
    
    //! Rectangle
    UIBezierPath *rectangle = [UIBezierPath bezierPath];
    
    // Top left corner
    [rectangle moveToPoint:CGPointMake(noseWidth, 0)];
    
    // Top right
    [rectangle addLineToPoint:CGPointMake(rightStart, 0)];
    [rectangle addCurveToPoint:CGPointMake(101.93, 0.8) controlPoint1:CGPointMake(99.98, 0) controlPoint2:CGPointMake(100.95, 0.28)];
    [rectangle addCurveToPoint:CGPointMake(104.2, 3.07) controlPoint1:CGPointMake(102.91, 1.32) controlPoint2:CGPointMake(103.68, 2.09)];
    [rectangle addCurveToPoint:CGPointMake(width, 7.69) controlPoint1:CGPointMake(104.72, 4.05) controlPoint2:CGPointMake(width, 5.02)];
    
    // Bottom right
    [rectangle addLineToPoint:CGPointMake(width, 28.31)];
    [rectangle addCurveToPoint:CGPointMake(104.2, 32.93) controlPoint1:CGPointMake(width, 30.98) controlPoint2:CGPointMake(104.72, 31.95)];
    [rectangle addCurveToPoint:CGPointMake(101.93, 35.2) controlPoint1:CGPointMake(103.68, 33.91) controlPoint2:CGPointMake(102.91, 34.68)];
    [rectangle addCurveToPoint:CGPointMake(rightStart, height) controlPoint1:CGPointMake(100.95, 35.72) controlPoint2:CGPointMake(99.98, height)];
    
    // Bottom left
    [rectangle addLineToPoint:CGPointMake(noseWidth, height)];
    [rectangle addCurveToPoint:CGPointMake(14.85, 34.51) controlPoint1:CGPointMake(17.35, height) controlPoint2:CGPointMake(15.94, 35.47)];
    
    // Nose
    [rectangle addCurveToPoint:CGPointMake(0, height / 2) controlPoint1:CGPointMake(4.95, 25.8) controlPoint2:CGPointMake(0, 20.3)];
    
    // Top left again
    [rectangle addCurveToPoint:CGPointMake(14.85, 1.49) controlPoint1:CGPointMake(0, 15.7) controlPoint2:CGPointMake(4.95, 10.2)];
    [rectangle addCurveToPoint:CGPointMake(noseWidth, 0) controlPoint1:CGPointMake(15.94, 0.53) controlPoint2:CGPointMake(17.35, 0)];
    
    [rectangle closePath];
    CGContextSaveGState(context);
    CGContextSetAlpha(context, 0.28);
    CGContextBeginTransparencyLayer(context, nil);
    {
        CGContextTranslateCTM(context, -450, -436);
        rectangle.usesEvenOddFillRule = YES;
        [[UIColor colorWithHue:1 saturation:0.992 brightness:0.614 alpha:1] setFill];
        [rectangle fill];
    }
    CGContextEndTransparencyLayer(context);
    CGContextRestoreGState(context);
}


@end
